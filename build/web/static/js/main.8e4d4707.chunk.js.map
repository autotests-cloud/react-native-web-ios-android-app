{"version":3,"sources":["langs.js","components/LangComponent.js","components/LoginPage.js","components/UserPage.js","App.js","serviceWorker.js","index.js"],"names":["translations","en","Login","Password","Language","Remember","Submit","LoginValidation","PasswordValidation","logout","Hello","label","private1","private2","ru","lang","str","LangComponent","onSetLang","View","style","styles","langContainer","accessibilityLabel","langs","testID","Object","keys","map","key","index","TouchableOpacity","langItem","onPress","e","Text","active","length","separator","StyleSheet","create","display","flexDirection","position","top","right","height","fontSize","borderWidth","backgroundColor","alignItems","color","fontWeight","paddingHorizontal","justifyContent","width","textDecorationLine","LoginPage","onLogin","useState","login","setLogin","password","setPassword","remember","setRemember","validation","setValidation","useEffect","v","loginContainer","TextInput","input","onChangeText","value","secureTextEntry","loginOptions","optionLabel","optionLabelText","Picker","itemStyle","mode","MODE_DROPDOWN","optionPicker","selectedValue","onValueChange","Item","CheckBox","boxType","submitWrapper","Button","loginButton","disabled","undefined","title","textAlign","marginTop","alignSelf","Platform","OS","marginRight","borderColor","marginLeft","zIndex","padding","paddingVertical","marginBottom","overflow","UserPage","user","userContainer","userContent","langByUrl","window","location","hash","replace","scrollView","appContainer","flex","fontFamily","appContent","flexWrap","appHeader","textAlignVertical","appHeaderText","logoutText","App","setUser","setLang","document","querySelector","innerText","StatusBar","barStyle","SafeAreaView","ScrollView","contentInsetAdjustmentBehavior","Boolean","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.8e4d4707.chunk.js","sourcesContent":["export const translations = {\n    en: {\n        Login: \"Login\",\n        Password: \"Password\",\n        Language: \"Language\",\n        Remember: \"Remember me\",\n        Submit: \"Submit\",\n        LoginValidation: \"Login must be more than 4 characters\",\n        PasswordValidation: \"Password must be more than 4 characters\",\n        logout: \"Logout\",\n        Hello: \"Hello\",\n        \"Not authorized\": \"Not authorized\",\n        label: \"EN\",\n        \"Header label\": \"Header label\",\n        \"Logout\": \"Logout\",\n        \"Content block\": \"Content block\",\n        \"Authorization form\": \"Authorization form\",\n        \"Login input\": \"Login input\",\n        \"Password input\": \"Password input\",\n        \"Language select\": \"Language select\",\n        \"Remember me checkbox\": \"Remember me checkbox\",\n        \"Login button\": \"Login button\",\n        \"Private content\": \"Private content\",\n        \"Language menu\": \"Language menu\",\n        private1: \"Here is your private content #1\",\n        private2: \"and private content #2\"\n    },\n    ru: {\n        Login: \"Логин\",\n        Password: \"Пароль\",\n        Language: \"Язык\",\n        Remember: \"Запомнить\",\n        Submit: \"Войти\",\n        LoginValidation: \"Логин должен содержать не менее четырех символов\",\n        PasswordValidation: \"Пароль должен содержать не менее четырех символов\",\n        logout: \"Выход\",\n        Hello: \"Привет\",\n        \"Not authorized\": \"Пожалуйста, авторизуйтесь\",\n        label: \"RU\",\n        \"Header label\": \"Надпись заголовка\",\n        \"Logout\": \"Выход\",\n        \"Content block\": \"Блок контента\",\n        \"Authorization form\": \"Форма авторизации\",\n        \"Login input\": \"Поле ввода логина\",\n        \"Password input\": \"Поле ввода пароля\",\n        \"Language select\": \"Выбор языка\",\n        \"Remember me checkbox\": \"Чекбокс запомнить меня\",\n        \"Login button\": \"Кнопка входа\",\n        \"Private content\": \"Приватный контент\",\n        \"Language menu\": \"Меню выбора языка\",\n        private1: \"Ваш приватный контент #1 \",\n        private2: \"и приватный контент #2\"\n    }\n}\n\nexport default (lang=\"en\", str) => translations[lang][str] || str","import React from \"react\"\nimport {\n    StyleSheet,\n    View,\n    Text,\n    TouchableOpacity,\n  } from 'react-native';\n\n  import langs, { translations } from \"./../langs\"\n\nexport const LangComponent = ({ lang, onSetLang }) => (<View style={styles.langContainer} accessibilityLabel={langs(lang, \"Language menu\")} testID={langs(lang, \"Language menu\")}>\n        {Object.keys(translations).map((key, index) => \n                <TouchableOpacity style={styles.langItem} key={key} onPress={e => onSetLang(key)}>\n                    <Text style={lang === key ? styles.active : styles.lang }>{ translations[key].label }</Text>\n                    {(index < Object.keys(translations).length - 1) && <Text style={styles.separator}>/</Text>}\n                </TouchableOpacity>\n            )}\n    </View>)\n\nconst styles = StyleSheet.create({\n    langItem: {\n        display: \"flex\",\n        flexDirection: \"row\",\n    },\n    langContainer: {\n        position: \"absolute\",\n        top: 0,\n        right: 0,\n        height: 60,\n        fontSize: 16,\n        borderWidth: 0,\n        flexDirection: \"row\",\n        backgroundColor: \"rgb(33, 150, 243)\",\n        display: \"flex\",\n        alignItems: \"center\",\n        color: \"white\",\n        fontWeight: \"bold\",\n        paddingHorizontal: 24,\n        justifyContent: \"center\",\n        width: 90,\n    },\n    separator: {\n        color: \"white\",\n        paddingHorizontal: 6\n    },\n    lang:{\n        textDecorationLine: \"underline\",\n        color: \"white\",\n    },\n    active:{\n        color: \"white\",\n    }\n  })","import React, { useState, useEffect } from \"react\"\nimport {\n    StyleSheet,\n    TextInput,\n    View,\n    Text,\n    Button,\n    Picker,\n    CheckBox,\n    Platform,\n    TouchableOpacity,\n  } from 'react-native';\n\nimport langs from \"./../langs\"\n\nexport const LoginPage = ({ lang, onLogin, onSetLang }) => {\n\n    const [ login, setLogin ] = useState(\"\")\n    const [ password, setPassword ] = useState(\"\")\n    const [ remember, setRemember ] = useState(false)\n    const [ validation, setValidation ] = useState({})\n\n    useEffect(() => {\n        const v = {}\n        if(login?.length < 1) v.login = langs(lang, \"LoginValidation\")\n        if(password?.length < 1) v.login = langs(lang, \"PasswordValidation\")\n        setValidation(v)\n    }, [ login, password, lang, remember ])\n\n    const handleLogin = () => {\n        onLogin(Object.keys(validation).length ? undefined : {\n            login, password, lang, remember\n        })\n    }\n\n    return <View style={styles.loginContainer} accessibilityLabel={langs(lang, \"Authorization form\")} testID={langs(lang, \"Authorization form\")}>\n        <View style={styles.label}>\n            <Text>{ langs(lang, \"Login\") }:</Text>\n            <TextInput style={styles.input} onChangeText={setLogin} value={ login } accessibilityLabel={langs(lang, \"Login input\")} testID={langs(lang, \"Login input\")}/>\n        </View>\n        <View style={styles.label}>\n            <Text>{ langs(lang, \"Password\") }:</Text>\n            <TextInput style={styles.input} onChangeText={setPassword} value={ password } accessibilityLabel={langs(lang, \"Password input\")} testID={langs(lang, \"Password input\")} secureTextEntry={true}/>\n        </View>\n        <View style={styles.loginOptions}>\n            <View style={styles.optionLabel}>\n                <Text style={styles.optionLabelText}>{ langs(lang, \"Language\") }:</Text>\n                <Picker itemStyle={{fontSize: 13}} mode={Picker.MODE_DROPDOWN} style={styles.optionPicker} selectedValue={ lang } onValueChange={onSetLang} accessibilityLabel={langs(lang, \"Language select\")} testID={langs(lang, \"Language select\")}>\n                    <Picker.Item label=\"Русский\" value=\"ru\" />\n                    <Picker.Item label=\"English\" value=\"en\" />\n                </Picker>\n            </View>\n            <View style={styles.optionLabel}>\n                <Text style={styles.optionLabelText}>{ langs(lang, \"Remember\") }:</Text>\n                <TouchableOpacity  onPress={e => setRemember(!remember)}>\n                    <CheckBox boxType={\"square\"} style={styles.CheckBox} value={remember} accessibilityLabel={langs(lang, \"Remember me checkbox\")} testID={langs(lang, \"Remember me checkbox\")}/> \n                </TouchableOpacity>\n            </View>\n        </View>\n        <View style={styles.submitWrapper}>\n            <Button style={styles.loginButton} disabled={Object.keys(validation).length > 0} accessibilityLabel={langs(lang, \"Login button\")} testID={langs(lang, \"Login button\")} onPress={ handleLogin } title={ langs(lang, \"Submit\") }/>\n        </View>\n    </View>\n}\n\nconst styles = StyleSheet.create({\n    loginContainer: {\n        alignItems: \"center\",\n        display: \"flex\",\n        justifyContent: \"center\",\n        width: \"100%\"\n    },\n    label: {\n        textAlign: \"left\",\n        flexDirection: \"column\",\n        fontSize: 13,\n        marginTop: 8,\n        display: \"flex\",\n        alignSelf: \"stretch\",\n    },\n    optionLabel: {\n        textAlign: \"left\",\n        flexDirection: \"row\",\n        fontSize: 13,\n        marginTop: Platform.OS === \"web\" ? 16 : 32,\n        height: 25,\n        alignItems: \"center\",\n        alignSelf: \"stretch\",\n    },\n    CheckBox: {\n        marginRight: 8,\n        fontSize: 10,\n        height: Platform.OS === \"web\" ? 16 : 20,\n        width: Platform.OS === \"web\" ? 16 : 20,\n        borderColor: \"gray\",\n        marginLeft: 16,\n        zIndex: 10\n    },\n    optionPicker: {\n        marginRight: 32,\n        marginLeft: 16,\n        width: 150,\n        height: Platform.OS === \"web\" ? 24 : 70,\n        fontSize: 12,\n        justifyContent: \"center\",\n        zIndex: 0,\n    },\n    input: {\n        fontSize: 15,\n        borderColor: \"gray\",\n        borderWidth: 1,\n        marginTop: 8,\n        padding: 4,\n        marginLeft: 16,\n        alignSelf: \"stretch\",\n        zIndex: 10,\n        \n    },\n    loginButton: {\n        borderColor: \"gray\",\n        borderWidth: 1,\n        paddingHorizontal: 16,\n        paddingVertical: 8,\n    },\n    submitWrapper: {\n        marginTop: 16,\n        marginLeft: 16,\n        borderWidth: 1,\n        borderColor: Platform.OS === \"web\" ? \"transparent\" : \"lightgray\",\n        alignSelf: \"stretch\",\n    },\n    loginOptions: {\n        flexDirection: \"column\",\n        justifyContent: \"space-between\",\n        marginTop: Platform.OS === \"web\" ? 8 : 32,\n        height: Platform.OS === \"web\" ? 80 : 130,\n        display: \"flex\",\n        alignItems: \"center\",\n        zIndex: 1,\n        marginBottom: 32,\n        overflow: \"hidden\"\n    },\n    optionLabelText: {\n        width: 120,\n        textAlign: \"right\"\n    }\n  })","import React from \"react\"\nimport {\n    View,\n    Text,\n    StyleSheet\n  } from 'react-native'\n\nimport langs from \"./../langs\"\n\nexport const UserPage = ({ user }) => {\n    return <View  style={ styles.userContainer }>\n            <Text style={ styles.userContent } accessibilityLabel={langs(user.lang, \"Private content\")} testID={langs(user.lang, \"Private content\")}>{ langs(user.lang, \"private1\") }</Text>\n            <Text style={ styles.userContent } accessibilityLabel={langs(user.lang, \"Private content\")} testID={langs(user.lang, \"Private content\")}>{ langs(user.lang, \"private2\") }</Text>\n        </View>\n}\n\nconst styles = StyleSheet.create({\n  userContainer: {\n    alignSelf: \"stretch\",\n    textAlign: \"center\",\n    justifyContent: \"center\",\n    display: \"flex\",\n    width: 310\n  },\n  userContent: {\n    alignSelf: \"stretch\",\n    textAlign: \"center\",\n  }\n})","/**\n * Sample React Native App\n * https://github.com/facebook/react-native\n *\n * @format\n * @flow strict-local\n */\n\nimport React, { useState, useEffect } from 'react'\nimport {\n  SafeAreaView,\n  StyleSheet,\n  ScrollView,\n  View,\n  Text,\n  StatusBar,\n  TouchableOpacity,\n  Platform\n} from 'react-native';\n\n\nimport { LangComponent } from \"./components/LangComponent\"\nimport { LoginPage } from \"./components/LoginPage\"\nimport { UserPage } from \"./components/UserPage\"\n\nimport langs, { translations } from \"./langs\"\n\nlet langByUrl = Platform.OS === \"web\" ? window.location.hash.replace(\"#\",\"\") : \"\"\nlangByUrl = translations[langByUrl] ? langByUrl : \"en\"\n\nconst App: () => React$Node = () => {\n  const [ user, setUser ] = useState()\n  const [ lang, setLang ] = useState(langByUrl)\n  \n  useEffect(() => {\n    if(Platform.OS === \"web\") window.location.hash = lang\n  }, [ lang ])\n\n  useEffect(() => {\n    if(Platform.OS === \"web\") document.querySelector(\"title\").innerText = user ? \"Main page\" : \"Login page\"\n    if(user) setLang(user?.lang)\n  }, [ user ])\n\n  const logoutHandler = () => {\n    setUser()\n  }\n  return (\n    <>\n      <StatusBar barStyle=\"dark-content\" />\n      <SafeAreaView>\n        <ScrollView\n          contentInsetAdjustmentBehavior=\"automatic\"\n          style={styles.scrollView}>\n          <View style={ styles.appContainer }>\n          <View style={styles.appHeader}>\n            <Text style={styles.appHeaderText} accessibilityLabel={langs(lang, \"Header label\")} testID={langs(lang, \"Header label\")}>{ user ? `${langs(user.lang, \"Hello\")}, ${ user.login }!` : langs(lang, \"Not authorized\")}</Text></View>\n            {user \n              ? <TouchableOpacity accessibilityLabel={langs(lang, \"Logout\")} testID={langs(lang, \"Logout\")} style={ styles.logout } onPress={logoutHandler}>\n                  <Text style={ styles.logoutText }>{ langs(lang, \"logout\")} </Text>\n                </TouchableOpacity>\n              : <LangComponent lang={lang} onSetLang={setLang} />}\n            <View style={styles.appContent} accessibilityLabel={langs(lang, \"Content block\")} testID={langs(lang, \"Content block\")}>\n              { user \n                ? <UserPage user={user}/> \n                : <LoginPage lang={lang} onLogin={ setUser } onSetLang={setLang} />\n              }\n            </View>\n          </View>\n        </ScrollView>\n      </SafeAreaView>\n    </>\n  )\n}\n\nconst styles = StyleSheet.create({\n  scrollView: {\n    backgroundColor: \"white\",\n    height: \"100%\"\n  },\n  appContainer: {\n    flex: 1,\n    textAlign: \"center\",\n    flexDirection: \"column\",\n    fontFamily: `-apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen', 'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue', sans-serif`\n  },\n  appContent: {\n    width: 310,\n    marginTop: 32,\n    flexWrap: \"wrap\",\n    flexDirection: \"column\",\n    alignSelf: \"center\",\n  },\n  appHeader: {\n    display: \"flex\",\n    height: 60,\n    alignSelf: \"stretch\",\n    textAlign: \"center\",\n    backgroundColor: \"#282c34\",\n    textAlignVertical: \"center\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  appHeaderText: {\n    fontSize: 22,\n    color: \"white\",\n  },\n  logout: {\n    position: \"absolute\",\n    top: 0,\n    right: 0,\n    height: 60,\n    fontSize: 16,\n    borderWidth: 0,\n    backgroundColor: \"rgb(33, 150, 243)\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    color: \"white\",\n    fontWeight: \"bold\",\n    paddingHorizontal: 24\n  },\n  logoutText: {\n    color: \"white\",\n  }\n})\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}